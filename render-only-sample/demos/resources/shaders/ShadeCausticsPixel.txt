//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float3 g_vAmbient;                 // Offset:    0 Size:    12
//   float4 g_vFogColor;                // Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SamplerSkin                       sampler      NA          NA             s0      1 
// SamplerCaustics                   sampler      NA          NA             s1      1 
// TextureSkin                       texture  float4          2d             t0      1 
// TextureCaustics                   texture  float4          2d             t1      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// COLOR0_center            0   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             0         2  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
// s1             s1              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
    def c2, 1, 0, 0, 0
    dcl t0
    dcl t1
    dcl_2d s0
    dcl_2d s1
    mov r0.x, t0.z
    mov r0.y, t0.w
    texld r0, r0, s1
    texld r1, t0, s0
    mov r2.xyz, t1.x
    mov r2.w, c2.x
    mul r0, r0, r2
    add r2.xyz, t1.x, c0
    mov r2.w, c2.x
    mad r0, r1, r2, r0
    lrp r1, t1.y, r0, c1
    mov oC0, r1

// approximately 12 instruction slots used (2 texture, 10 arithmetic)
ps_4_0
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 3
sample r0.xyzw, v1.zwzz, t1.xyzw, s1
mov r1.x, v2.x
mov r1.w, l(1.000000)
mul r0.xyzw, r0.xyzw, r1.xxxw
sample r1.xyzw, v1.xyxx, t0.xyzw, s0
add r2.xyz, v2.xxxx, cb0[0].xyzx
mov r2.w, l(1.000000)
mad r0.xyzw, r1.xyzw, r2.xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, -cb0[1].xyzw
mad o0.xyzw, v2.yyyy, r0.xyzw, cb0[1].xyzw
ret 
// Approximately 11 instruction slots used
