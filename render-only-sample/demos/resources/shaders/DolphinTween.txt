//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 g_vZero;                    // Offset:    0 Size:    16
//   float4 g_vConstants;               // Offset:   16 Size:    16
//   float3 g_vBlendWeights;            // Offset:   32 Size:    12
//   float4x4 g_matWorldViewProj;       // Offset:   48 Size:    64
//   float4x4 g_matWorldView;           // Offset:  112 Size:    64
//   float4x4 g_matView;                // Offset:  176 Size:    64 [unused]
//   float4x4 g_matProjection;          // Offset:  240 Size:    64 [unused]
//   float3 g_vSeafloorLightDir;        // Offset:  304 Size:    12 [unused]
//   float3 g_vDolphinLightDir;         // Offset:  320 Size:    12
//   float4 g_vDiffuse;                 // Offset:  336 Size:    16 [unused]
//   float4 g_vAmbient;                 // Offset:  352 Size:    16 [unused]
//   float4 g_vFogRange;                // Offset:  368 Size:    16
//   float4 g_vTexGen;                  // Offset:  384 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// POSITION                 1   xyz         1     NONE   float   xyz 
// POSITION                 2   xyz         2     NONE   float   xyz 
// NORMAL                   4   xyz         3     NONE   float   xyz 
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// COLOR0_center            0   xyzw        2     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             0         8  ( FLT, FLT, FLT, FLT)
// c9         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c10        cb0            20         1  ( FLT, FLT, FLT, FLT)
// c11        cb0            23         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c12, 1, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mul r0.xyz, v1, c3.y
    mad r0.xyz, v0, c3.x, r0
    mad r0.xyz, v2, c3.z, r0
    mov r0.w, c12.x
    dp4 oPos.z, r0, c6
    dp3 r1.x, v3, c10
    max oT1.x, r1.x, c1.x
    dp4 r1.z, r0, c8
    dp4 r1.w, r0, c9
    mul oT0.zw, r1, c2.y
    add r1.x, -r1.w, c11.y
    mul r1.x, r1.x, c11.z
    max r1.x, r1.x, c1.x
    min oT1.y, r1.x, c2.x
    dp4 r1.x, r0, c4
    dp4 r1.y, r0, c5
    dp4 r0.x, r0, c7
    mad oPos.xy, r0.x, c0, r1
    mov oPos.w, r0.x
    mov oT0.xy, v4
    mov oT1.zw, c12.xyyx

// approximately 21 instruction slots used
vs_4_0
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xyz
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 2
mul r0.xyz, v1.xyzx, cb0[2].yyyy
mad r0.xyz, v0.xyzx, cb0[2].xxxx, r0.xyzx
mad r0.xyz, v2.xyzx, cb0[2].zzzz, r0.xyzx
mov r0.w, l(1.000000)
dp4 o0.x, r0.xyzw, cb0[3].xyzw
dp4 o0.y, r0.xyzw, cb0[4].xyzw
dp4 o0.z, r0.xyzw, cb0[5].xyzw
dp4 o0.w, r0.xyzw, cb0[6].xyzw
dp4 r1.z, r0.xyzw, cb0[7].xyzw
dp4 r1.w, r0.xyzw, cb0[9].xyzw
mul o1.zw, r1.zzzw, cb0[1].yyyy
add r0.x, -r1.w, cb0[23].y
mul r0.x, r0.x, cb0[23].z
max r0.x, r0.x, cb0[0].x
min o2.y, r0.x, cb0[1].x
mov o1.xy, v4.xyxx
dp3 r0.x, v3.xyzx, cb0[20].xyzx
max o2.x, r0.x, cb0[0].x
mov o2.zw, l(0,0,0,1.000000)
ret 
// Approximately 20 instruction slots used
